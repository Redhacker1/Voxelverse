[gd_scene load_steps=5 format=2]

[ext_resource path="res://textures/Cross.png" type="Texture" id=2]
[ext_resource path="res://camera_environment.tres" type="Environment" id=3]

[sub_resource type="GDScript" id=2]
script/source = "extends KinematicBody

var FRICTION = 0.15
var accel = 5
var WALK_SPEED = 4.25
var SPRINT_SPEED = WALK_SPEED*1.3
var SNEAK_SPEED = WALK_SPEED*0.3
var velo = Vector3(0,0,0)
var velocity = Vector3(0,0,0)
var velocityGoal = Vector3(0,0,0)
var velocityGoalPrev = Vector3(0,0,0)
var mouse_sensitivity = 0.1
var camera_angle_x = 0
var sprint_active = false

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	var viewportSize = get_viewport().size
	get_node(\"HUD/Cross\").position = viewportSize/2.0

func _physics_process(delta):
	if Input.is_action_pressed(\"sprint\") and velo!=Vector3(0,0,0) and sprint_active==false:
		sprint_active=true
		$TweenCameraFov.interpolate_property($Camera,\"fov\", 90, 100, 0.1, Tween.TRANS_LINEAR, Tween.EASE_IN)
		$TweenCameraFov.start()
	elif Input.is_action_just_released(\"sprint\") and sprint_active==true:
		sprint_active=false
		$TweenCameraFov.interpolate_property($Camera,\"fov\", 100, 90, 0.1, Tween.TRANS_LINEAR, Tween.EASE_IN)
		$TweenCameraFov.start()
	if Input.is_action_pressed(\"sprint\"):
		accel = SPRINT_SPEED
	elif Input.is_action_pressed(\"sneak\"):
		velocity.y=-8
		#accel = SNEAK_SPEED
	else:
		accel = WALK_SPEED
	if not is_on_floor():
		pass
		#velocity.y-=0.5
	velocity.x-=(velocity.x*FRICTION)
	velocity.z-=(velocity.z*FRICTION)
	velocity.y-=(velocity.y*FRICTION)
	velo = Vector3(0,0,0)
	var aim = self.get_rotation_degrees()
	if Input.is_action_pressed(\"move_forward\"):
		velo.z+=-cos(deg2rad(aim.y))
		velo.x+=-sin(deg2rad(aim.y))
	elif Input.is_action_pressed(\"move_backward\"):
		velo.z+=cos(deg2rad(aim.y))
		velo.x+=sin(deg2rad(aim.y))
	if Input.is_action_pressed(\"move_left\"):
		velo.x+=-cos(deg2rad(aim.y))
		velo.z+=sin(deg2rad(aim.y))
	elif Input.is_action_pressed(\"move_right\"):
		velo.x+=cos(deg2rad(aim.y))
		velo.z+=-sin(deg2rad(aim.y))
		
		
	velocityGoal=velocityGoal.normalized()
	if velo == Vector3(0,0,0):
		velocityGoal=Vector3(0,0,0)
	if velocityGoalPrev.x*velocityGoal.x<0:
		velocityGoal.x=0
	if velocityGoalPrev.z*velocityGoal.z<0:
		velocityGoal.z=0
		
	if is_on_floor():
		velocityGoal+=(velo*0.4)
	else:
		velocityGoal+=(velo*0.2)
		
	if velocityGoal.x!=0:
		var angle = atan2(velocityGoal.z,velocityGoal.x)
		velocity.x = cos(angle)*accel
		velocity.z = sin(angle)*accel
	elif velocityGoal.z!=0:
		velocity.x = 0
		velocity.z = accel

	velocityGoalPrev = velo
	
	if Input.is_action_pressed(\"move_up\"): #and is_on_floor():
		velocity.y=8

	velocity = self.move_and_slide(velocity, Vector3(0,1,0))
	

func _input(event):
	
	if event is InputEventMouseMotion:
		self.rotate_y(deg2rad(-event.relative.x*mouse_sensitivity))
		var mouse_change_x = -event.relative.y*mouse_sensitivity
		if mouse_change_x + camera_angle_x < -90:
			mouse_change_x = -90-camera_angle_x
		elif mouse_change_x + camera_angle_x > 90:
			mouse_change_x = 90-camera_angle_x
		get_node(\"Camera\").rotate_x(deg2rad(mouse_change_x))
		camera_angle_x+=mouse_change_x
"

[sub_resource type="BoxShape" id=1]
extents = Vector3( 0.194353, 0.218192, 0.863867 )

[node name="Player" type="KinematicBody"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.083, 11.034, 2.135 )
script = SubResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0.00604248, -0.752319, -0.0309526 )
shape = SubResource( 1 )
disabled = true

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0152669, 0, -0.00834012 )
environment = ExtResource( 3 )
fov = 90.0
size = 1.2
far = 199.6

[node name="RayCast" type="RayCast" parent="Camera"]
enabled = true
cast_to = Vector3( 0, 0, -5 )

[node name="OmniLight" type="OmniLight" parent="."]
light_energy = 0.0
light_indirect_energy = 0.0
light_specular = 0.0
omni_range = 7.2
omni_attenuation = 1.31951

[node name="TweenCameraFov" type="Tween" parent="."]

[node name="HUD" type="CanvasLayer" parent="."]
layer = -1

[node name="Cross" type="Sprite" parent="HUD"]
position = Vector2( 640, 360 )
texture = ExtResource( 2 )
